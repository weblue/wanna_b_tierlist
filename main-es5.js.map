{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/card-contents/card-contents.component.ts","webpack:///src/app/components/card-contents/card-contents.component.html","webpack:///src/app/components/disclaimers/disclaimers.component.ts","webpack:///src/app/components/disclaimers/disclaimers.component.html","webpack:///src/app/components/faq/faq.component.ts","webpack:///src/app/components/faq/faq.component.html","webpack:///src/app/components/filter/filter.component.ts","webpack:///src/app/components/filter/filter.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/oro-page/oro-page.component.ts","webpack:///src/app/components/oro-page/oro-page.component.html","webpack:///src/app/components/table/table.component.ts","webpack:///src/app/components/table/table.component.html","webpack:///src/app/models/Database.ts","webpack:///src/app/models/FilterParams.ts","webpack:///src/app/models/Item.ts","webpack:///src/app/models/Melee.ts","webpack:///src/app/models/Primary.ts","webpack:///src/app/models/Secondary.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/db-resolver.service.ts","webpack:///src/app/services/filter-dialog.service.ts","webpack:///src/app/services/filter.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","db","AppRoutingModule","forRoot","imports","AppComponent","data","filterDialogService","dialog","router","filter","faUpArrow","toTop","document","getElementById","_subscription","showSidebarChange","subscribe","dialogRef","closeAll","open","events","event","gtag","urlAfterRedirects","window","onscroll","body","scrollTop","documentElement","style","display","unsubscribe","goToTop","selector","templateUrl","styleUrls","cookieConfig","AppModule","declarations","providers","bootstrap","CardContentsComponent","faYoutube","console","log","DisclaimersComponent","dataService","FaqComponent","getDb","faqs","Object","faq","map","key","FilterComponent","faCheck","faTimes","tierSelect","buildSelect","triggerSelect","categorySelect","munitionSelect","tierTypes","filterCategory","getCurFilterParams","filterParams","base","name","mr","rivenDisp","tier","tierChoices","setValue","reset","buildType","buildChoices","triggerType","triggerChoices","category","categoryChoices","munitions","munitionChoices","currentTab","changeTab","tab","categoryTypes","munitionTypes","buildTypes","triggerTypes","value","apply","clear","FooterComponent","faHeart","faDiscord","faGithub","MainComponent","listVersion","version","NavbarComponent","faInfoCircle","OroPageComponent","TableComponent","changeDetectorRef","filterDialog","tabs","activeTab","faSearch","faDown","faUp","loading","displayedColumns","tableDataSource","showSearch","showClear","filterDisplay","_tableDataSub","dataChange","load","afterAllClosed","length","setFilterDisplay","JSON","stringify","quickSearchName","PRIMARY","toString","toLowerCase","getTabData","array","update","toggle","detectChanges","simpleParams","setFilterParams","text","replace","toggleFilterDialog","height","opacity","minHeight","animations","Database","Categories","columnDefs","FilterParams","Item","Melee","meleeCategories","meleeBuildTypes","Primary","primCategories","primBuildTypes","primTriggerTypes","primMunitionTypes","Secondary","secCategories","secBuildTypes","secTriggerTypes","secMunitionTypes","DataService","http","notifyTabListener","dbUrl","Secondaries","Melees","Primaries","database","get","pipe","primaries","sort","secondaries","melees","next","applyFilter","input","promise","items","injectTiers","item","show","includes","match","forEach","munition","dmg","values","itemArray","a","b","rank","topAdded","contAdded","viaAdded","nbAdded","utAdded","i","firstTier","splice","secondTier","thirdTier","fourthTier","untestedTier","providedIn","isTier","DbResolverService","route","FilterDialogService","FilterService","_tabSub","clearFilters","params","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,6EAFb;AAGEX,aAAO,EAAE;AACPY,UAAE,EAAE;AADG;AAHX,KADqB,EAQrB;AAAEF,UAAI,EAAE,KAAR;AAAeC,eAAS,EAAE;AAA1B,KARqB,EASrB;AAAED,UAAI,EAAE,KAAR;AAAeC,eAAS,EAAE;AAA1B,KATqB,CAAvB;;QAiBaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAJlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAIkB,EAHjB,4DAGiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAHjB,4DAGiB;AAAA,O;AAHL,K;;;;;sEAGXA,gB,EAAgB;cAL5B,sDAK4B;eALnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAKmB,Q;;;;;;;;;;;;;;;;;;ACxB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaS,Y;AASX,4BACUC,IADV,EAEUC,mBAFV,EAGSC,MAHT,EAISC,MAJT,EAKSC,MALT,EAK8B;AAAA;;AAAA;;AAJpB,aAAAJ,IAAA,GAAAA,IAAA;AACA,aAAAC,mBAAA,GAAAA,mBAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AART,aAAAC,SAAA,GAAY,2EAAZ;AACA,aAAAC,KAAA,GAAQC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAR;AASE,aAAKC,aAAL,GAAqBR,mBAAmB,CAACS,iBAApB,CAAsCC,SAAtC,CAAgD,YAAM;AACzE,cAAI,KAAI,CAACC,SAAT,EAAoB;AAClB,iBAAI,CAACV,MAAL,CAAYW,QAAZ;;AACA,iBAAI,CAACD,SAAL,GAAiB,IAAjB;AACD;;AAED,eAAI,CAACA,SAAL,GAAiB,KAAI,CAACV,MAAL,CAAYY,IAAZ,CAAiB,mFAAjB,EAAkC,EAAlC,CAAjB;AACD,SAPoB,CAArB;AASA,aAAKX,MAAL,CAAYY,MAAZ,CAAmBJ,SAAnB,CAA6B,UAAAK,KAAK,EAAI;AACpC,cAAGA,KAAK,YAAY,6DAApB,EAAkC;AAChCC,gBAAI,CAAC,QAAD,EAAW,gBAAX,EACF;AACE,2BAAaD,KAAK,CAACE;AADrB,aADE,CAAJ;AAKD;AACF,SARD;AASD;;;;mCAEU;AACTC,gBAAM,CAACC,QAAP,GAAkB,YAAY;AAC5B,gBAAIb,QAAQ,CAACc,IAAT,CAAcC,SAAd,GAA0B,EAA1B,IAAgCf,QAAQ,CAACgB,eAAT,CAAyBD,SAAzB,GAAqC,EAAzE,EAA6E;AAC3E,mBAAKhB,KAAL,CAAWkB,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACD,aAFD,MAEO;AACL,mBAAKnB,KAAL,CAAWkB,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACD;AACF,WAND;AAOD;;;sCAEa;AACZ;AACA,eAAKhB,aAAL,CAAmBiB,WAAnB;AACD;;;kCAES;AACRnB,kBAAQ,CAACc,IAAT,CAAcC,SAAd,GAA0B,CAA1B;AACAf,kBAAQ,CAACgB,eAAT,CAAyBD,SAAzB,GAAqC,CAArC;AACD;;;;;;;uBAtDUvB,Y,EAAY,mI,EAAA,oJ,EAAA,mI,EAAA,uH,EAAA,uI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gI;AAAA;AAAA;AClBzB;;AACE;;AAEA;;AACA;;AACA;;AAAQ;AAAA,mBAAS,IAAA4B,OAAA,EAAT;AAAkB,WAAlB;;AACN;;AACF;;AACF;;;;AAFa;;AAAA;;;;;;;;;sEDYA5B,Y,EAAY;cALxB,uDAKwB;eALd;AACT6B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBzqF,CAwCA;;;AACA,QAAMC,YAAY,GAA0B;AAC1C,gBAAU;AACR;AACA,kBAAU,oBAFF,CAGR;;AAHQ,OADgC;AAM1C,kBAAY,aAN8B;AAO1C,eAAS,SAPiC;AAQ1C,iBAAW;AACT,iBAAS;AACP,wBAAc,SADP;AAEP,kBAAQ,SAFD;AAGP,kBAAQ;AAHD,SADA;AAMT,kBAAU;AACR,wBAAc,SADN;AAER,kBAAQ,SAFA;AAGR,oBAAU;AAHF;AAND,OAR+B;AAoB1C,cAAQ,MApBkC;AAqB1C,iBAAW;AACT,mBAAW,6LADF;AAET,mBAAW,SAFF;AAGT,gBAAQ,gBAHC;AAIT,gBAAQ,qBAJC;AAKT,gBAAQ,2BALC;AAMT,kBAAU;AAND;AArB+B,KAA5C;;QA2EaC,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CACT,iEADS,C;AAEV,gBA5BQ,CACP,0EAAuBnC,OAAvB,CAA+BkC,YAA/B,CADO,EAEP,uEAFO,EAGP,mFAHO,EAIP,qEAJO,EAKP,4FALO,EAMP,wEANO,EAOP,oEAPO,EAQP,0EARO,EASP,sEATO,EAUP,oEAVO,EAWP,2EAXO,EAYP,2EAZO,EAaP,yEAbO,EAcP,6EAdO,EAeP,uEAfO,EAgBP,uEAhBO,EAiBP,oEAjBO,EAkBP,yEAlBO,EAmBP,sFAnBO,EAoBP,2DApBO,EAqBP,qEArBO,EAsBP,+EAtBO,EAuBP,+EAvBO,EAwBP,mEAxBO,CA4BR;;;;0HAGUC,S,EAAS;AAAA,uBA1ClB,4DA0CkB,EAzClB,mGAyCkB,EAxClB,iFAwCkB,EAvClB,oFAuCkB,EAtClB,oFAsCkB,EArClB,2EAqCkB,EApClB,oFAoCkB,EAnClB,8EAmCkB,EAlClB,wGAkCkB,EAjClB,yFAiCkB;AAjCF,6FAIhB,uEAJgB,EAKhB,mFALgB,EAMhB,qEANgB,EAOhB,4FAPgB,EAQhB,wEARgB,EAShB,oEATgB,EAUhB,0EAVgB,EAWhB,sEAXgB,EAYhB,oEAZgB,EAahB,2EAbgB,EAchB,2EAdgB,EAehB,yEAfgB,EAgBhB,6EAhBgB,EAiBhB,uEAjBgB,EAkBhB,uEAlBgB,EAmBhB,oEAnBgB,EAoBhB,yEApBgB,EAqBhB,sFArBgB,EAsBhB,2DAtBgB,EAuBhB,qEAvBgB,EAwBhB,+EAxBgB,EAyBhB,+EAzBgB,EA0BhB,mEA1BgB;AAiCE,O;AAPC,K;;;;;sEAOVA,S,EAAS;cA5CrB,sDA4CqB;eA5CZ;AACRC,sBAAY,EAAE,CACZ,4DADY,EAEZ,mGAFY,EAGZ,iFAHY,EAIZ,oFAJY,EAKZ,oFALY,EAMZ,2EANY,EAOZ,oFAPY,EAQZ,8EARY,EASZ,wGATY,EAUZ,yFAVY,CADN;AAaRnC,iBAAO,EAAE,CACP,0EAAuBD,OAAvB,CAA+BkC,YAA/B,CADO,EAEP,uEAFO,EAGP,mFAHO,EAIP,qEAJO,EAKP,4FALO,EAMP,wEANO,EAOP,oEAPO,EAQP,0EARO,EASP,sEATO,EAUP,oEAVO,EAWP,2EAXO,EAYP,2EAZO,EAaP,yEAbO,EAcP,6EAdO,EAeP,uEAfO,EAgBP,uEAhBO,EAiBP,oEAjBO,EAkBP,yEAlBO,EAmBP,sFAnBO,EAoBP,2DApBO,EAqBP,qEArBO,EAsBP,+EAtBO,EAuBP,+EAvBO,EAwBP,mEAxBO,CAbD;AAuCRG,mBAAS,EAAE,CACT,iEADS,CAvCH;AA0CRC,mBAAS,EAAE,CAAC,4DAAD;AA1CH,S;AA4CY,Q;;;;;;;;;;;;;;;;;;ACpHtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKQ;;AAA2B;;AAAqB;;AAAW;;AAAI;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAE7D;;AAAmD;;AAAa;;;;;;AAAb;;AAAA;;;;;;AACnD;;AAAmD;;AAAkB;;;;;;AAFvE;;AAAsB;;AAAqB;;AAAc;;AACvD;;AACA;;AACF;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAER;;AAAuB;;AAAqB;;AAAO;;AAAI;;AAAc;;;;;;AAAd;;AAAA;;;;;;AACvD;;AAAwB;;AAAqB;;AAAQ;;AAAI;;AAAe;;;;;;AAAf;;AAAA;;;;;;AACzD;;AAA0B;;AAAqB;;AAAgB;;AAAI;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AACnE;;AAAsB;;AAAqB;;AAAY;;AAAI;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAa/D;;AAAsB;;AAAqB;;;;;;AAArB;;AAAA;;;;QDlBbC,qB;AAIX,uCAAc;AAAA;;AAFd,aAAAC,SAAA,GAAY,4EAAZ;AAEiB;;;;mCAET,CACP;;;0CAEc;AACbC,iBAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;;;;;;uBAXUH,qB;AAAqB,K;;;YAArBA,qB;AAAqB,oC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,0X;AAAA;AAAA;ACRlC;;AAA2B;;AAAa;;AACxC;;AACE;;AACE;;AACE;;AACE;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACF;;AACF;;AACA;;AACA;;AACE;;AACF;;AACE;;AAAM;;AAAU;;AAClB;;AACF;;AACA;;AAEE;;AAAyC;;AAAK;;AAC9C;;AACF;;AACF;;;;AA5B2B;;AAAA;;AAKf;;AAAA;;AACA;;AAAA;;AAIA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGL;;AAAA;;AAEQ;;AAAA;;AAOQ;;AAAA;;AAChB;;AAAA;;;;;;;;;sEDlBMA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTR,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;gBAC/B;;;;;;;;;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaU,oB;AAIX,oCAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;mCAErC,CACV;;;;;;;uBAPUD,oB,EAAoB,mI;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,uJ;AAAA;AAAA;ACVjC;;AACE;;AACE;;AAAqD;;AAAQ;;AAA+C;;AAC5G;;AAAgB;;AAAoB;;AAAmB;;AAAI;;AAC7D;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;;;;;;;;sEDAaA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTZ,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACE;;AACE;;AAAG;;AAAiB;;AACtB;;AACA;;AACF;;;;;;AAHO;;AAAA;;AAEqB;;AAAA;;;;QDEnBY,Y;AAIX,4BAAoBD,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;mCAErC;AAAA;;AACT,eAAKA,WAAL,CAAiBE,KAAjB,GAAyBhC,SAAzB,CAAmC,UAAAhB,EAAE,EAAI;AACvC,kBAAI,CAACiD,IAAL,GAAYC,MAAM,CAACzD,IAAP,CAAYO,EAAE,CAACmD,GAAf,EAAoBC,GAApB,CAAwB,UAASC,GAAT,EAAc;AAChD,qBAAOrD,EAAE,CAACmD,GAAH,CAAOE,GAAP,CAAP;AACD,aAFW,CAAZ;AAGD,WAJD;AAKD;;;;;;;uBAZUN,Y,EAAY,mI;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,e;AAAA,a;AAAA,2U;AAAA;AAAA;ACTzB;;AACE;;AAAiC;;AAA0B;;AAC3D;;AACE;;AAMA;;AACE;;AACE;;AAAG;;AAA+B;;AACpC;;AACA;;AACE;;AACE;;AACA;;AACE;;AAAiB;;AAAI;;AACrB;;AAAwB;;AAAW;;AACrC;;AACA;;AACA;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAhI6B;;AAAA;;;;;;;;;sEDMhBA,Y,EAAY;cALxB,uDAKwB;eALd;AACTd,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FaqComponent} from \"./components/faq/faq.component\";\nimport {MainComponent} from \"./components/main/main.component\";\nimport {OroPageComponent} from \"./components/oro-page/oro-page.component\";\nimport {DbResolverService} from \"./services/db-resolver.service\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    resolve: {\n      db: DbResolverService\n    }\n  },\n  { path: 'faq', component: FaqComponent },\n  { path: 'oro', component: OroPageComponent }\n  ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {DataService} from \"./services/data.service\";\n\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {FilterDialogService} from \"./services/filter-dialog.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {FilterComponent} from \"./components/filter/filter.component\";\nimport {faArrowUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {NgcCookieConsentService} from \"ngx-cookieconsent\";\nimport {Router, NavigationEnd} from '@angular/router';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {FilterService} from \"./services/filter.service\";\n\ndeclare let gtag: Function;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  private _subscription: Subscription;\n\n  private dialogRef;\n\n  faUpArrow = faArrowUp;\n  toTop = document.getElementById(\"toTop\");\n\n  constructor(\n    private data: DataService,\n    private filterDialogService: FilterDialogService,\n    public dialog: MatDialog,\n    public router: Router,\n    public filter: FilterService\n  ) {\n    this._subscription = filterDialogService.showSidebarChange.subscribe(() => {\n      if (this.dialogRef) {\n        this.dialog.closeAll();\n        this.dialogRef = null;\n      }\n\n      this.dialogRef = this.dialog.open(FilterComponent, {});\n    });\n\n    this.router.events.subscribe(event => {\n      if(event instanceof NavigationEnd){\n        gtag('config', 'UA-109524715-1',\n          {\n            'page_path': event.urlAfterRedirects\n          }\n        );\n      }\n    });\n  }\n\n  ngOnInit() {\n    window.onscroll = function () {\n      if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n        this.toTop.style.display = \"block\";\n      } else {\n        this.toTop.style.display = \"none\";\n      }\n    };\n  }\n\n  ngOnDestroy() {\n    //prevent memory leak when component destroyed\n    this._subscription.unsubscribe();\n  }\n\n  goToTop() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n}\n","<!--<div class=\"has-background-grey\">-->\n<div>\n  <app-navbar></app-navbar>\n<!--  <router-outlet class=\"hero\"></router-outlet>-->\n  <router-outlet></router-outlet>\n  <app-footer></app-footer>\n  <button (click)=\"goToTop()\" id=\"toTop\" class=\"button is-info is-small\" title=\"Go to top\">\n    <fa-icon [icon]=\"faUpArrow\" size=\"lg\"></fa-icon>\n  </button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\n\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppComponent } from './app.component';\nimport { DisclaimersComponent } from './components/disclaimers/disclaimers.component';\nimport { TableComponent } from './components/table/table.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { FaqComponent } from './components/faq/faq.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { MainComponent } from './components/main/main.component';\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport { CardContentsComponent } from './components/card-contents/card-contents.component';\nimport {NgcCookieConsentConfig, NgcCookieConsentModule} from \"ngx-cookieconsent\";\nimport { OroPageComponent } from './components/oro-page/oro-page.component';\nimport {CookieService} from \"ngx-cookie-service\";\n\n//TODO update this styling\nconst cookieConfig:NgcCookieConsentConfig = {\n  \"cookie\": {\n    //TODO update this on deploy; maybe automate it?\n    \"domain\": \"cephalonwannab.com\"\n    // \"domain\": \"localhost\"\n  },\n  \"position\": \"bottom-left\",\n  \"theme\": \"classic\",\n  \"palette\": {\n    \"popup\": {\n      \"background\": \"#000000\",\n      \"text\": \"#ffffff\",\n      \"link\": \"#ffffff\"\n    },\n    \"button\": {\n      \"background\": \"#f1d600\",\n      \"text\": \"#000000\",\n      \"border\": \"transparent\"\n    }\n  },\n  \"type\": \"info\",\n  \"content\": {\n    \"message\": \"We use cookies for analytics and site settings. They are never shared with 3rd parties.\\n<br>\\n<br>\\nPlease whitelist us in your adblocker so we can learn where to improve the site.\\n<br>\",\n    \"dismiss\": \"Got it!\",\n    \"deny\": \"Refuse cookies\",\n    \"link\": \"Learn about cookies\",\n    \"href\": \"https://cookiesandyou.com\",\n    \"policy\": \"Cookie Policy\"\n  }\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DisclaimersComponent,\n    TableComponent,\n    NavbarComponent,\n    FooterComponent,\n    FaqComponent,\n    FilterComponent,\n    MainComponent,\n    CardContentsComponent,\n    OroPageComponent,\n  ],\n  imports: [\n    NgcCookieConsentModule.forRoot(cookieConfig),\n    BrowserModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatInputModule,\n    MatSortModule,\n    MatDialogModule,\n    MatButtonToggleModule,\n    FormsModule,\n    AppRoutingModule,\n    MatExpansionModule,\n    MatExpansionModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {AfterViewInit, Component, Input, OnInit} from '@angular/core';\nimport {faYoutube} from \"@fortawesome/free-brands-svg-icons\";\n\n@Component({\n  selector: 'card-contents',\n  templateUrl: './card-contents.component.html',\n  styleUrls: ['./card-contents.component.css']\n})\nexport class CardContentsComponent implements OnInit, AfterViewInit {\n  @Input() item: any;\n  faYoutube = faYoutube;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    console.log('card init');\n  }\n\n}\n","<h1 class=\"title is-small\">{{item.name}}</h1>\n<div class=\"card-container columns\">\n  <div class=\"column is-one-third is-one-quarter-mobile \">\n    <div class=\"stat-list\">\n      <ul>\n        <li *ngIf=\"item.munitions\"><b class=\"is-medium\">Munitions: </b>{{item.munitions}}</li>\n        <li *ngIf=\"item.type\"><b class=\"is-medium\">Trigger Type: </b>\n          <span *ngIf=\"item.type !== 'Full charge/Detonate'\">{{item.type}}</span>\n          <span *ngIf=\"item.type === 'Full charge/Detonate'\">F. charge/Detonate</span>\n        </li>\n        <li *ngIf=\"item.combo\"><b class=\"is-medium\">Combo: </b>{{item.combo}}</li>\n        <li *ngIf=\"item.stance\"><b class=\"is-medium\">Stance: </b>{{item.stance}}</li>\n        <li *ngIf=\"item.rivenrec\"><b class=\"is-medium\">Riven Stat Rec: </b>{{item.rivenrec}}</li>\n        <li *ngIf=\"item.base\"><b class=\"is-medium\">Base/Event: </b>{{item.base}}</li>\n      </ul>\n    </div>\n    <a [href]=\"item.yt_link\" target=\"_blank\" class=\"button is-large is-fullwidth youtube is-info is-outlined\">\n    <span class=\"icon\">\n      <fa-icon [icon]=\"faYoutube\" size=\"lg\"></fa-icon>\n    </span>\n      <span>Watch test</span>\n    </a>\n  </div>\n  <div class=\"column\">\n    <!--    TODO integrate build from overframe API-->\n    <a target=\"_blank\" [href]=\"item.dmgLink\">Build</a>\n    <p *ngIf=\"item.notes\">Notes: {{item.notes}}</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { FAQPoint } from '../../models/FAQPoint';\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-disclaimers',\n  templateUrl: './disclaimers.component.html',\n  styleUrls: ['./disclaimers.component.css']\n})\nexport class DisclaimersComponent implements OnInit {\n\n  disclaimers: Array<FAQPoint>;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n  }\n\n}\n","<article class=\"message is-centered\">\n  <div class=\"message-body\">\n    Weapons are ranked with optimal forma count, however <strong>rivens are not factored into weapon rankings!!!</strong>\n    Read more about <a routerLink=\"oro\">our testing process</a>.\n  </div>\n</article>\n<article class=\"message is-info is-centered is-hidden-tablet\">\n  <div class=\"message-body\">\n    Try desktop view for a better experience.\n  </div>\n</article>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { FAQPoint } from '../../models/FAQPoint';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\nexport class FaqComponent implements OnInit {\n\n  faqs: Array<FAQPoint>;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.dataService.getDb().subscribe(db => {\n      this.faqs = Object.keys(db.faq).map(function(key) {\n        return db.faq[key];\n      });\n    });\n  }\n\n}\n","<div class=\"container\" id=\"faq\">\n  <h1 id=\"faq-title\" class=\"title\">Frequently Asked Questions</h1>\n  <div class=\"message-collection\">\n    <article class=\"message\" *ngFor=\"let item of faqs\">\n      <div class=\"message-header subtitle ans-title\">\n        <p>{{item.question}}</p>\n      </div>\n      <div class=\"message-body\" [innerHTML]=\"item.text\"></div>\n    </article>\n    <article class=\"message\">\n      <div class=\"message-header subtitle ans-title\">\n        <p>What do the Trigger Types mean?</p>\n      </div>\n      <div class=\"message-body\">\n        <table class=\"table\">\n          <thead>\n          <tr>\n            <th title=\"Type\">Type</th>\n            <th title=\"Explanation\">Explanation</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <th>\n              Full-Auto\n            </th>\n            <td>\n              Fires continuously while button is held down.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Held\n            </th>\n            <td>\n              Fires continuous beam while button is held down.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Semi-Auto\n            </th>\n            <td>\n              Fires once per click.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Duplex\n            </th>\n            <td>\n              Fires once on click and once on release.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Burst\n            </th>\n            <td>\n              Fires a number of times per click.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Charge\n            </th>\n            <td>\n              Charges up when fire is held down, fires on release.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Spool-Up\n            </th>\n            <td>\n              Fires continuously while button is held down, fire rate increases over a short period.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Detonate\n            </th>\n            <td>\n              Detonates active projectiles.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Full Charge\n            </th>\n            <td>\n              Charges up when fire is held down, only fires on release when fully charged.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Force Charge\n            </th>\n            <td>\n              Weapon automatically charges on click and fires when fully charged.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Full-Auto Burst\n            </th>\n            <td>\n              Fires bursts continuously while button is held down.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Throw\n            </th>\n            <td>\n              Weapon automatically charges on click and is thrown when fully charged, losing access to it until picked up or when the weapon automatically returns after a set period of time.\n            </td>\n          </tr>\n          <tr>\n            <th>\n              Mag Burst\n            </th>\n            <td>\n              Fires a number of times equal to the current maximum magazine size on click.\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </article>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {FilterParams} from '../../models/FilterParams';\nimport {faCheck, faTimes} from '@fortawesome/free-solid-svg-icons';\nimport {FormControl} from \"@angular/forms\";\nimport {FilterService} from \"../../services/filter.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n\n  faCheck = faCheck;\n  faTimes = faTimes;\n\n  // filterCategory: 'Primary' | 'Secondary' | 'Melee' | 'Item' | 'Frame';\n  filterCategory: string;\n\n  private filterParams: FilterParams;\n\n  //Strings\n  name: string;\n  base: string;\n\n  //Numbers\n  mr: number;\n  rivenDisp: number;\n\n  tierSelect = new FormControl();\n  buildSelect = new FormControl();\n  triggerSelect = new FormControl();\n  categorySelect = new FormControl();\n  munitionSelect = new FormControl();\n\n  //Arrays\n  munitionTypes: string[];\n  buildTypes: string[];\n  triggerTypes: string[];\n  tierTypes: string[];\n  categoryTypes: string[];\n\n  constructor(\n    private data: DataService,\n    private filter: FilterService,\n    public dialog: MatDialog,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.tierTypes = this.filter.tierTypes;\n    this.filterCategory = this.filter.filterCategory;\n\n    if (this.data.getCurFilterParams()) {\n      this.filterParams = this.data.getCurFilterParams();\n\n      if (this.filterParams.base)\n        this.filter.base = this.filterParams.base;\n      else\n        this.filter.base = '';\n      if (this.filterParams.name)\n        this.filter.name = this.filterParams.name;\n      else\n        this.filter.name = '';\n\n      if (this.filterParams.mr)\n        this.filter.mr = this.filterParams.mr;\n      else\n        this.filter.mr = null;\n      if (this.filterParams.rivenDisp)\n        this.filter.rivenDisp = this.filterParams.rivenDisp;\n      else\n        this.filter.rivenDisp = null;\n\n      if (this.filterParams.tier){\n        this.filter.tierChoices = this.filterParams.tier;\n        this.tierSelect.setValue(this.filterParams.tier);\n      }\n      else{\n        this.filter.tierChoices = [];\n        this.tierSelect.reset();\n      }\n      if (this.filterParams.buildType) {\n        this.filter.buildChoices = this.filterParams.buildType;\n        this.buildSelect.setValue(this.filterParams.buildType);\n      }\n      else {\n        this.filter.buildChoices = [];\n        this.buildSelect.reset();\n      }\n      if (this.filterParams.triggerType) {\n        this.filter.triggerChoices = this.filterParams.triggerType;\n        this.triggerSelect.setValue(this.filterParams.triggerType);\n      }\n      else {\n        this.filter.triggerChoices = [];\n        this.triggerSelect.reset();\n      }\n      if (this.filterParams.category) {\n        this.filter.categoryChoices = this.filterParams.category;\n        this.categorySelect.setValue(this.filterParams.category);\n      }\n      else {\n        this.filter.categoryChoices = [];\n        this.categorySelect.reset();\n      }\n      if (this.filterParams.munitions) {\n        this.filter.munitionChoices = this.filterParams.munitions;\n        this.munitionSelect.setValue(this.filterParams.munitions);\n      }\n      else {\n        this.filter.munitionChoices = [];\n        this.munitionSelect.reset();\n      }\n\n    } else {\n      this.filter.base = '';\n      this.filter.name = '';\n\n      this.filter.mr = null;\n      this.filter.rivenDisp = null;\n\n      this.filter.buildChoices = [];\n      this.buildSelect.reset();\n      this.filter.triggerChoices = [];\n      this.triggerSelect.reset();\n      this.filter.categoryChoices = [];\n      this.categorySelect.reset();\n      this.filter.munitionChoices = [];\n      this.munitionSelect.reset();\n    }\n\n    this.filter.filterCategory = this.data.currentTab;\n    this.changeTab(this.data.currentTab);\n  }\n\n  changeTab(tab) {\n    this.filter.changeTab(tab);\n\n    this.categoryTypes = this.filter.categoryTypes;\n    this.munitionTypes = this.filter.munitionTypes;\n    this.buildTypes = this.filter.buildTypes;\n    this.triggerTypes = this.filter.triggerTypes;\n  }\n\n  apply() {\n    let filterParams: FilterParams = new FilterParams();\n\n    if (this.name) {\n      filterParams.name = this.name;\n    }\n    if (this.base) {\n      filterParams.base = this.base;\n    }\n    if (this.mr) {\n      filterParams.mr = this.mr;\n    }\n    if (this.rivenDisp) {\n      filterParams.rivenDisp = this.rivenDisp;\n    }\n    if (this.buildSelect.value) {\n      filterParams.buildType = this.buildSelect.value;\n    }\n    if (this.categorySelect.value) {\n      filterParams.category = this.categorySelect.value;\n    }\n    if (this.triggerSelect.value) {\n      filterParams.triggerType = this.triggerSelect.value;\n    }\n    if (this.munitionSelect.value) {\n      filterParams.munitions = this.munitionSelect.value;\n    }\n    if (this.tierSelect.value) {\n      filterParams.tier = this.tierSelect.value;\n    }\n\n    this.filter.apply(filterParams);\n\n    this.dialog.closeAll();\n  }\n\n  clear() {\n    this.buildSelect.reset();\n    this.categorySelect.reset();\n    this.triggerSelect.reset();\n    this.munitionSelect.reset();\n    this.tierSelect.reset();\n\n    this.filter.clear();\n  }\n\n}\n","<form class=\"example-form\">\n  <table class=\"example-full-width\">\n    <tr>\n      <td>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Name</mat-label>\n          <input matInput name=\"name\" [(ngModel)]=\"name\"/>\n        </mat-form-field>\n      </td>\n      <td>\n        <mat-form-field>\n          <mat-label>Base</mat-label>\n          <input matInput name=\"base\" [(ngModel)]=\"base\"/>\n        </mat-form-field>\n      </td>\n    </tr>\n  </table>\n  <mat-divider class=\"padded-bottom\"></mat-divider>\n  <table class=\"example-full-width\">\n    <tr>\n      <td>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Tier</mat-label>\n          <mat-select [formControl]=\"tierSelect\" multiple>\n            <mat-option *ngFor=\"let item of tierTypes\" [value]=\"item\">{{item}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </td>\n      <td>\n        <mat-form-field class=\"example-full-width\" >\n          <mat-label>Category</mat-label>\n          <mat-select [formControl]=\"categorySelect\" multiple>\n            <mat-option *ngFor=\"let item of categoryTypes\" [value]=\"item\">{{item}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <mat-form-field class=\"example-full-width\" *ngIf = \"filterCategory !== 'Melee'\">\n          <mat-label>Trigger Type</mat-label>\n          <mat-select [formControl]=\"triggerSelect\" multiple>\n            <mat-option *ngFor=\"let item of triggerTypes\" [value]=\"item\">{{item}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </td>\n      <td>\n        <mat-form-field class=\"example-full-width\" *ngIf = \"filterCategory !== 'Melee'\">\n          <mat-label>Munitions</mat-label>\n          <mat-select [formControl]=\"munitionSelect\" multiple>\n            <mat-option *ngFor=\"let item of munitionTypes\" [value]=\"item\">{{item}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Build Type</mat-label>\n          <mat-select [formControl]=\"buildSelect\" multiple>\n            <mat-option *ngFor=\"let item of buildTypes\" [value]=\"item\">{{item}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </td>\n    </tr>\n  </table>\n  <mat-divider class=\"padded-bottom\"></mat-divider>\n  <table class=\"example-full-width\">\n    <tr>\n      <td>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Mastery Rank (MR)</mat-label>\n          <input matInput type=\"number\" name=\"mr\" [(ngModel)]=\"mr\"/>\n        </mat-form-field>\n      </td>\n      <td>\n        <mat-form-field>\n          <mat-label>Riven Disposition</mat-label>\n          <input matInput type=\"number\" name=\"rivenDisp\" [(ngModel)]=\"rivenDisp\"/>\n        </mat-form-field>\n      </td>\n    </tr>\n  </table>\n  <button class=\"button is-success is-outlined item-spacer\" (click)=\"apply()\">\n    <fa-icon [icon]=\"faCheck\"></fa-icon>\n    &nbsp;Apply\n  </button>\n  <button class=\"button is-danger is-outlined\" (click)=\"clear()\">\n    <fa-icon [icon]=\"faTimes\"></fa-icon>\n    &nbsp;Clear\n  </button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faDiscord, faGithub } from '@fortawesome/free-brands-svg-icons';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  faHeart = faHeart;\n  faDiscord = faDiscord;\n  faGithub = faGithub;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"content\">\n  <mat-divider></mat-divider>\n  <div class=\"content container\">\n    <h2 class=\"mat-headline\">i_wanna_b_the_guy's Tier List</h2>\n    <p>built with <fa-icon class=\"animated-heartbeat\" [icon]=\"faHeart\"></fa-icon> by the tier list team</p>\n    <ul class=\"list-unstyled\">\n      <li>author: nader</li>\n      <li>curator: <a href=\"https://reddit.com/u/sakai4eva\" target=\"_blank\" rel=\"noopener\">sakai4eva</a></li>\n      <li>assistant curators: Quiggsy, Demto</li>\n      <li>developers: nader, <a href=\"https://matthewwang.me\" target=\"_blank\" rel=\"noopener\">matt (mattxwang)</a></li>\n      <li>thanks to: Kalgash, <a href=\"https://www.reddit.com/user/zhandragon\" target=\"_blank\" rel=\"noopener\">Zhandragon</a>, Brendan, .hallwayRaptor™, Ypqah</li>\n    </ul>\n    <br />\n    <ul class=\"list-unstyled\">\n      <li><a href=\"https://discord.gg/Cq3jW27\" target=\"_blank\" rel=\"noopener\"><fa-icon [icon]=\"faDiscord\"></fa-icon> Discord Server</a></li>\n      <li><a href=\"https://github.com/weblue/wanna_b_tierlist\" target=\"_blank\" rel=\"noopener\"><fa-icon [icon]=\"faGithub\"></fa-icon> GitHub Repository</a></li>\n    </ul>\n    <br />\n    <p> &copy; i_wanna_b_the_guy / nader 2020 </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from \"../../services/data.service\";\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  listVersion: string;\n\n  constructor(\n    private data: DataService\n  ) { }\n\n  ngOnInit(): void {\n    this.data.getDb().subscribe((db) => {\n      this.listVersion = db.version;\n    });\n  }\n\n}\n","<section class=\"hero-body is-medium contents\">\n  <div class=\"container\">\n    <p class=\"title is-2\">i_wanna_b_the_guy's Warframe Tier List</p>\n    <p class=\"subtitle is-4 is-italic\">\n      An opinionated guide to everything Warframe.\n    </p>\n    <p class=\"subtitle is-4\">\n      <strong>Current Version:</strong> {{listVersion}}\n    </p>\n    <app-disclaimers></app-disclaimers>\n  </div>\n</section>\n<mat-divider></mat-divider>\n<br/>\n<app-table></app-table>\n<br/>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\n\nimport {faInfoCircle} from '@fortawesome/free-solid-svg-icons';\nimport {faDiscord, faGithub} from \"@fortawesome/free-brands-svg-icons\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  listVersion: string;\n\n  faDiscord = faDiscord;\n  faGithub = faGithub;\n  faInfoCircle = faInfoCircle;\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    // this.dataService.getDb().subscribe(db => this.listVersion = db.version);\n  }\n\n\n\n}\n","<nav class=\"navbar is-fixed-top is-dark\">\n  <div class=\"navbar-brand\">\n    <a class=\"navbar-item title\" routerLink=\"/\">wanna_b Home</a>\n  </div>\n  <div class=\"navbar-menu\">\n    <div class=\"navbar-item has-dropdown is-hoverable\">\n      <a class=\"navbar-link\">\n<!--      <a class=\"navbar-link\" routerLink=\"/faq\">-->\n        <fa-icon [icon]=\"faInfoCircle\" size=\"lg\"></fa-icon>\n        &nbsp; FAQ and Notes\n      </a>\n\n      <div class=\"navbar-dropdown\">\n        <a class=\"navbar-item\" routerLink=\"/faq\">\n          FAQ\n        </a>\n        <a class=\"navbar-item\" routerLink=\"/oro\">\n          Testing Methodology\n        </a>\n      </div>\n    </div>\n    <a class=\"navbar-item discord-button\" href=\"https://discord.gg/Cq3jW27\" target=\"_blank\" rel=\"noopener\">\n      <fa-icon [icon]=\"faDiscord\"></fa-icon>\n      &nbsp; Join our Discord\n    </a>\n    <a class=\"navbar-item is-info github-button\" href=\"https://github.com/weblue/wanna_b_tierlist\" target=\"_blank\"\n       rel=\"noopener\">\n      <fa-icon [icon]=\"faGithub\"></fa-icon>\n      &nbsp; Github Repository\n    </a>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oro-page',\n  templateUrl: './oro-page.component.html',\n  styleUrls: ['./oro-page.component.css']\n})\nexport class OroPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <p id=\"oro-title\" class=\"title is-2\">Testing Methodology</p>\n  <p class=\"subtitle is-4\">Outline of the process our curators use to rank weapons</p>\n  <div class=\"content is-medium\">\n    <p class=\"title\">The Orokin 100</p>\n    <p class=\"subtitle\">The Orokin 100 challenge, usually shortened to <strong>oro100</strong>, requires the following\n      setup:</p>\n\n    <blockquote>\n      Using the Citadel Simulacrum.\n      <br>\n      Warframe with 1.00 movespeed and no passive DPS increase.\n      <br>\n      Only two mods are installed: <strong>Enemy Sense</strong> and <strong>Enemy Radar.</strong>\n      <br>\n      <strong>Two</strong> of each of the following enemies (total of 16 out of maximum 20):\n      <ul>\n        <li>Corrupted Lancer</li>\n        <li>Corrupted Crewman</li>\n        <li>Corrupted Butcher</li>\n        <li>Corrupted Moa</li>\n        <li>Corrupted Heavy Gunner</li>\n        <li>Corrupted Ancient</li>\n        <li>Corrupted Bombard</li>\n        <li>Corrupted Nullifier</li>\n      </ul>\n      <strong>Friendly Fire</strong>: OFF\n      <br>\n      <strong>Invincibility</strong>: ON\n      <br>\n      <strong>Pause AI</strong>: OFF\n      <br>\n      <strong>Enemy Level</strong>: 100\n      <br>\n      <br>\n      To ensure enemies spawn according to a fixed pattern and minimize variations:\n      <ol type=\"1\">\n        <li>Simulate the enemies <strong>ONCE</strong></li>\n        <li>Return to the console and kill enemies</li>\n        <li>Exit the console</li>\n        <li>Go to the console a third time and simulate again</li>\n      </ol>\n    </blockquote>\n    <p>The time it takes to kill all 16 enemies is considered the scored for that run.</p>\n  </div>\n  <div class=\"content\">\n    <p class=\"title\">Testing Procedure</p>\n    <p class=\"subtitle\">The exact procedure used by our curators</p>\n    <br>\n    <p class=\"title is-4 is-spaced\">Standard test</p>\n    <p>\n      Tester should attempt up to three test runs to familiarize themselves with the weapon.\n      <br>\n      Minimum of <strong>five (5)</strong> complete attempts are made per weapon.</p>\n    <blockquote>\n      A run is considered incomplete if:\n      <ul>\n        <li>Tester drops out of bounds due to mistake in maneuver. If the mistake is induced by the weapon the run\n          continues.\n        </li>\n        <li>An enemy drops out of bounds before fatal damage is dealt.</li>\n        <li>Tester fails to reset all conditions prior to run. This commonly includes, but is not limited to: Berserker\n          proc(s), Bladed Rounds, failing to reload and pick up ammo, sniper combo, and others.\n        </li>\n        <li>Any other errors that will severely impact results.</li>\n      </ul>\n    </blockquote>\n    <p>Depending on a weapon's performance, up to <strong>11</strong> runs may be completed.</p>\n    <blockquote>\n      The following criteria is used to determine number of runs attempted:\n      <ul>\n        <li>5 runs - All 5 runs fall below Top for that arsenal slot</li>\n        <li>7 runs - Out of 5 runs, at least one (1) run fall within Top</li>\n        <li>9 runs - Out of 7 runs, at least three (3) runs within Top</li>\n        <li>11 runs - Out of 9 runs, at least five (5) runs fall within Top. </li>\n      </ul>\n    </blockquote>\n    <p class=\"title is-5\">Final Scoring:</p>\n    <p>After all runs are completed, the <strong>five (5) fastest runs</strong> will be used for final scoring.\n      <br>\n      <strong>The final score is calculated with this formula:</strong>\n    </p>\n    <blockquote>\n      <em>ROUND</em> ( [ Average of 5 fastest runs ] * ( 1 + [ Standard Deviation of 5 Fastest runs ] / 2) , 2 )\n    </blockquote>\n    <p>This ensures that the average time of each weapon is considered, while penalizing potential inconsistencies of the weapon.</p>\n  </div>\n</div>\n","import {ChangeDetectorRef, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {MatTable} from '@angular/material/table';\nimport {Categories, columnDefs} from '../../models/Database';\nimport {animate, stagger, state, style, transition, trigger} from '@angular/animations';\nimport {Primary} from '../../models/Primary';\nimport {Secondary} from '../../models/Secondary';\nimport {Melee} from '../../models/Melee';\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {Tier} from \"../../models/Tier\";\nimport {Item} from \"../../models/Item\";\nimport {FilterDialogService} from \"../../services/filter-dialog.service\";\n\nimport {\n  faSearch,\n  faChevronCircleDown,\n  faChevronCircleUp\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {FilterParams} from \"../../models/FilterParams\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {FilterService} from \"../../services/filter.service\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons/faTimes\";\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0', opacity: '0', minHeight: '0', display: 'none' })),\n      state('expanded', style({height: '*', opacity: '1', display: 'flex' })),\n      // transition('collapsed => expanded',\n      //   [\n      //     style({ display: 'block' }),\n      //     animate('400ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      //   ]),\n      // transition('expanded => collapsed',\n      //   [\n      //     animate('400ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      //   ]),\n      transition(':enter',\n        [\n          style({ height: 0, opacity: 0, minHeight: '0' }),\n          animate('400ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ height: '*', opacity: '1', display: 'flex' }))\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({ height: '*', opacity: '1', display: 'flex' }),\n          animate('400ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ height: 0, opacity: 0, minHeight: '0'}))\n        ]\n      )\n    ]),\n  ]\n})\nexport class TableComponent implements OnInit {\n\n  expandedElement: Primary | Secondary | Melee | null;\n  tabs: string[] = ['Primaries', 'Secondaries', 'Melees'];\n  activeTab = this.tabs[0];\n\n  faSearch = faSearch;\n  faTimes = faTimes;\n  faDown = faChevronCircleDown;\n  faUp = faChevronCircleUp;\n\n  private loading: boolean = true;\n  @ViewChild('table') el: MatTable<any>;\n  quickSearchName: string;\n\n  displayedColumns: string[] = [];\n  tableDataSource: (Item | Tier)[] = [];\n\n  _tableDataSub: Subscription;\n\n  showSearch: boolean = true;\n  showClear: boolean = false;\n  filterDisplay: string = '';\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private data: DataService,\n    private filter: FilterService,\n    private filterDialog: FilterDialogService,\n    private dialog: MatDialog\n  ) {\n    this._tableDataSub = data.dataChange.subscribe(() => {\n      this.load(this.activeTab);\n    });\n    this.dialog.afterAllClosed.subscribe(() => {\n      if (Object.keys(this.data.getCurFilterParams()).length !== 0) {\n        this.showSearch = false;\n        this.showClear = true;\n        this.setFilterDisplay(JSON.stringify(this.data.getCurFilterParams()));\n      } else {\n        this.quickSearchName = null;\n        this.showSearch = true;\n        this.showClear = false;\n        this.filterDisplay = null;\n      }\n\n    });\n  }\n\n  ngOnInit() {\n    this.load(Categories.PRIMARY.toString());\n  }\n\n  switch(tab: string) {\n    // this.data.filterParams = new FilterParams();\n    this.clear();\n\n    tab = tab.toLowerCase();\n    this.data.getTabData(tab).subscribe((array) => {\n      this.loading = false;\n      this.tableDataSource = array;\n      this.displayedColumns = columnDefs[tab];\n      this.update();\n    });\n  }\n\n  load(tab: string) {\n    tab = tab.toLowerCase();\n    this.data.getTabData(tab).subscribe((array) => {\n      this.loading = false;\n      this.tableDataSource = array;\n      this.displayedColumns = columnDefs[tab];\n      this.update();\n    });\n  }\n\n  toggleFilterDialog() {\n    this.filterDialog.toggle();\n  }\n\n  clear() {\n    this.filter.clear();\n\n    this.quickSearchName = null;\n    this.showSearch = true;\n    this.showClear = false;\n    this.filterDisplay = null;\n  }\n\n  update(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  quickFilter(): void {\n    let simpleParams = new FilterParams();\n    simpleParams.name = this.quickSearchName;\n    this.data.setFilterParams(simpleParams);\n  }\n\n  setFilterDisplay(text: string): void {\n    text = text.replace(/\"],\"/g, \" | \");\n    text = text.replace(/\",\"/g, \", \");\n    text = text.replace(/[^a-zA-Z0-9 :,|]/g, \"\");\n    text = text.replace(/[:]/g, \": \");\n\n    this.filterDisplay = text;\n  }\n}\n","<!--<div class=\"hero\">-->\n<div>\n  <div class=\"level is-marginless\" *ngIf=\"!showSearch\">\n    <div class=\"level-left\"></div>\n    <div class=\"level-right has-text-right field margin-left margin-right\">\n        <div class=\"notification is-light is-info\" style=\"padding: .625em .75em\">\n          <p class=\"level-item control\">\n            <!--        <mat-label>Current Filters:</mat-label>-->\n            &nbsp;Filtering: [{{filterDisplay}}]\n          </p>\n        </div>\n    </div>\n  </div>\n  <div class=\"level is-marginless\">\n    <div class=\"level-left tabs is-large\" id=\"special-nav-tabs\">\n      <ul class=\"level-item\">\n        <li *ngFor=\"let tab of tabs\" (click)=\"switch(tab.toLowerCase()); activeTab = tab\"\n            [class.is-active]=\"activeTab == tab\"><a> {{tab}}\n        </a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"level-right has-text-right field is-grouped margin-left margin-right\">\n      <p class=\"level-item control\" *ngIf=\"showSearch\">\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Quick Search</mat-label>\n          <input matInput name=\"quick-search\" [(ngModel)]=\"quickSearchName\" (ngModelChange)=\"quickFilter()\"/>\n        </mat-form-field>\n      </p>\n      <p class=\"level-item control\">\n        <a class=\"button is-info is-outlined\" (click)=\"toggleFilterDialog()\">\n          <fa-icon [icon]=\"faSearch\" size=\"lg\"></fa-icon>\n          &nbsp;Open Filters</a>\n      </p>\n      <p class=\"level-item control\" *ngIf=\"showClear\">\n        <a class=\"button is-light is-danger\" (click)=\"clear()\">\n          <fa-icon [icon]=\"faTimes\" size=\"lg\"></fa-icon>\n          &nbsp;Clear Filters</a>\n      </p>\n    </div>\n  </div>\n  <div>\n    <table class=\"container is-fullhd table\" mat-table matSort [dataSource]=\"tableDataSource\"\n           multiTemplateDataRows>\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th class=\"padded\" *matHeaderCellDef> Name</th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\">\n          <a class=\"padded\" target=\"_blank\" href=\"{{element.url}}\">{{element.name}}</a>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"category\">\n        <th class=\"padded\" *matHeaderCellDef> Category</th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\"> {{element.category}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"mr\">\n        <th class=\"padded\" *matHeaderCellDef> MR</th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\"> {{element.mr}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"dmg\">\n        <th class=\"padded\" *matHeaderCellDef> Build Type</th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\">\n          <a target=\"_blank\" href=\"{{element.dmgLink}}\" *ngIf=\"element.dmg !== 'Critical & Status'\">{{element.dmg}}</a>\n          <a target=\"_blank\" href=\"{{element.dmgLink}}\" *ngIf=\"element.dmg === 'Critical & Status'\">Crit & Status</a></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"munitions\">\n        <th class=\"padded\" *matHeaderCellDef> Munitions</th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\"> {{element.munitions}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"rivenDisposition\">\n        <th class=\"padded\" *matHeaderCellDef> Riven Dispo</th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\"> {{element.rivenDisposition  | number: '1.2-2'}}\n          <div class=\"unusual_riven\" *ngIf=\"element.specRivenDisp\">\n            ✪\n            <span class=\"tooltip_text\">Higher-than-expected riven disposition for this rank</span>\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"notes\">\n        <th class=\"padded\" *matHeaderCellDef> Notes</th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\"> {{element.notes}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type\">\n        <th class=\"padded\" *matHeaderCellDef> Trigger Type</th>\n<!--        <td mat-cell class=\"padded\" *matCellDef=\"let element\"> {{element.type}} </td>-->\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\">\n          <span *ngIf=\"element.type !== 'Full charge/Detonate'\">{{element.type}}</span>\n          <span *ngIf=\"element.type === 'Full charge/Detonate'\">F. charge/Detonate</span>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"perfIndex\">\n        <th class=\"padded\" *matHeaderCellDef>\n          <div>\n        <span class=\"perf_index\">Perf Index\n          <span\n            class=\"tooltip_text\">Performance Index; performance score relative to other weapons. See FAQ for more.</span>\n        </span>\n          </div>\n        </th>\n        <td mat-cell class=\"padded\" *matCellDef=\"let element\"> {{element.perfIndex | number: '1.1-1'}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"expand\">\n        <th *matHeaderCellDef></th>\n        <td mat-cell class=\"padded\" style=\"width: 92px;\" *matCellDef=\"let element\">\n          <fa-icon *ngIf=\"element !== expandedElement\" [icon]=\"faDown\" size=\"lg\" class=\"is-pulled-right\"></fa-icon>\n          <fa-icon *ngIf=\"element === expandedElement\" [icon]=\"faUp\" size=\"lg\" class=\"is-pulled-right\"></fa-icon>\n        </td>\n      </ng-container>\n\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <!--TODO rename the example CSS-->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" class=\"row-borders\" [attr.colspan]=\"displayedColumns.length\">\n          <div class=\"row-detail top-border\" *ngIf=\"element === expandedElement\"\n               [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n            <card-contents style=\"width: 100%; flex-shrink: 0;\" [item]=\"element\"></card-contents>\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"tierHeader\">\n        <td class=\"padded\" [attr.colspan]=\"displayedColumns.length\" mat-cell *matCellDef=\"let tier\">\n          <strong>{{tier.name}}</strong></td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" [hidden]=\"row.isTier\"\n          class=\"element-row top-border\"\n          [class.row-expanded]=\"expandedElement === row\"\n          (click)=\"expandedElement = expandedElement === row ? null : row\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"\n                [hidden]=\"row.isTier\"></tr>\n      <tr class=\"sticky-tier\" mat-row *matRowDef=\"let row; columns: ['tierHeader']\"\n          [hidden]=\"!row.isTier\"></tr>\n    </table>\n  </div>\n</div>\n","import {Archwing} from \"./Archwing\";\nimport {Archgun} from \"./Archgun\";\nimport {Archmelee} from \"./Archmelee\";\nimport {Companion} from \"./Companion\";\nimport {FAQPoint} from \"./FAQPoint\";\nimport {SentinelWeapon} from \"./SentinelWeapon\";\nimport {Item} from \"./Item\";\nimport {Tier} from \"./Tier\";\n\nexport class Database {\n  primaries: (Item | Tier)[];\n  secondaries: (Item | Tier)[];\n  melees: (Item | Tier)[];\n  archwings: Archwing[];\n  archguns: Archgun[];\n  archmelees: Archmelee[];\n  companions: Companion[];\n  sent_weps: SentinelWeapon[];\n\n  Primaries: {};\n  Secondaries: {};\n  Melees: {};\n\n  version: string;\n  faq: FAQPoint[];\n}\n\nexport enum Categories {\n  PRIMARY = 'Primaries',\n  SECONDARY = 'Secondaries',\n  MELEE = 'Melees',\n  ARCHWING = 'Archwings',\n  ARCHGUN = 'Archguns',\n  ARCHMELEE = 'Archmelees',\n  COMPANIONS = 'Companions'\n}\n\nexport const tierTypes = ['Exceptional', 'Satisfactory', 'Mediocre', 'Insufficient', 'Untested'];\n\nexport const columnDefs = {\n  'primaries': ['name', 'perfIndex', 'category', 'rivenDisposition', 'dmg', 'mr', 'expand'],\n  'secondaries': ['name', 'perfIndex', 'category', 'rivenDisposition', 'dmg', 'mr', 'expand'],\n  'melees': ['name', 'perfIndex', 'category', 'rivenDisposition', 'dmg', 'mr', 'expand']\n};\n","export class FilterParams {\n  //Item\n  name: string;\n  base: string;\n\n  mr: number;\n  rivenDisp: number;\n\n  buildType: any[];\n  triggerType: any[];\n  category: any[];\n  tier: string[];\n\n  munitions: any[];\n\n  constructor() {\n\n  }\n}\n","export class Item {\n  name: string;\n  notes: string;\n  rank: number;\n  tier: string;\n  url: string;\n}\n","import {Item} from \"./Item\";\n\nexport class Melee extends Item{\n  base: string;\n  category: string;\n  combo: string;\n  dmg: string;\n  mr: number;\n  stance: string;\n  notes: string;\n}\n\nexport let meleeCategories = [\n  \"Sword and Shield\",\n  \"Staff\",\n  \"Scythe\",\n  \"Fists\",\n  \"Hammer\",\n  \"Whip\",\n  \"Sword\",\n  \"Polearm\",\n  \"Dagger\",\n  \"Glaive\",\n  \"Blade and Whip\",\n  \"Dual Swords\",\n  \"Rapier\",\n  \"Nikana\",\n  \"Dual Daggers\",\n  \"Heavy Blade\",\n  \"Machete\",\n  \"Warfan\",\n  \"Sparring\",\n  \"Tonfa\",\n  \"Nunchaku\",\n  \"Two-handed Nikana\",\n  \"Gunblade\",\n  \"Claws\"\n];\n\nexport let meleeBuildTypes = [\n  'Status',\n  'Heavy Attack',\n  'Hybrid',\n  'Critical'\n];\n","import {Item} from \"./Item\";\n\nexport class Primary extends Item {\n  base: string;\n  category: string;\n  dmg: string;\n  mr: number;\n  rivenDisposition: number;\n  type: string;\n  munitions: string;\n}\n\nexport let primCategories = [\n  'Shotgun',\n  'Rifle',\n  'Sniper',\n  'Bow',\n  'Launcher'\n];\n\nexport let primBuildTypes = [\n  'Status',\n  'Critical',\n  'Raw'\n];\n\nexport let primTriggerTypes = [\n  'Full-auto',\n  'Held',\n  'Semi-auto',\n  'Force charge',\n  'Full-auto burst',\n  'Burst',\n  'Charge',\n  'Detonate',\n  'Throw',\n  'Spool-up',\n  'Mag burst',\n  'Duplex',\n];\n\nexport let primMunitionTypes = [\n  'Projectile',\n  'Beam',\n  'Hitscan'\n];\n","export class Secondary {\n  base: string;\n  dmg: string;\n  mr: number;\n  rivenDisposition: number;\n  name: string;\n  notes: string;\n  rank: number;\n  tier: string;\n  type: string;\n  url: string;\n}\n\nexport let secCategories = [\n  'Semi-auto',\n  'Auto',\n  'Beam',\n  'Shotgun',\n  'Launcher',\n  'Crossbow',\n  'Thrown',\n  'Semi-auto Explosive'\n];\n\nexport let secBuildTypes = [\n  'Status',\n  'Critical',\n  'Raw',\n  'Speed'\n];\n\nexport let secTriggerTypes = [\n  'Full-auto',\n  'Held',\n  'Semi-auto',\n  'Force charge',\n  'Full-auto burst',\n  'Burst',\n  'Charge',\n  'Detonate',\n  'Throw',\n  'Spool-up',\n  'Mag burst',\n  'Duplex',\n];\n\nexport let secMunitionTypes = [\n  'Projectile',\n  'Beam',\n  'Hitscan'\n];\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, of} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {Database} from \"../models/Database\";\nimport {Tier} from \"../models/Tier\";\nimport {Item} from \"../models/Item\";\nimport {FilterParams} from \"../models/FilterParams\";\nimport {Subject} from \"rxjs/internal/Subject\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public database: Database;\n  dataChange: Subject<null> = new Subject<null>();\n  notifyTabListener: Subject<string> = new Subject<string>();\n\n  private dbUrl = './assets/thelist.json';\n  public loading: boolean;\n\n  public filterParams: FilterParams = new FilterParams();\n\n  currentTab: string;\n  Secondaries = {\n    categoryTypes: [],\n    buildTypes: [],\n    triggerTypes: [],\n    munitionTypes: []\n  };\n  Melees = {\n    buildTypes: [],\n    categoryTypes: []\n  };\n  Primaries = {\n    triggerTypes: [],\n    buildTypes: [],\n    categoryTypes: [],\n    munitionTypes: []\n\n  };\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.filterParams = new FilterParams();\n  }\n\n  //Return or request the db\n  public getDb(): Observable<Database> {\n    if (this.database) {\n      return of(this.database);\n    }\n\n    return this.http.get<Database>(this.dbUrl).pipe<Database>(map(db => {\n        this.database = db;\n\n        this.database.primaries = DataService.sort(db.Primaries);\n        this.database.secondaries = DataService.sort(db.Secondaries);\n        this.database.melees = DataService.sort(db.Melees);\n\n        // This debug code will print all the filtered weapon field types\n\n        // for (let item in db.Primaries) {\n        //   if (!this.Primaries.categoryTypes.includes(db.Primaries[item].category))\n        //     this.Primaries.categoryTypes.push(db.Primaries[item].category);\n        //\n        //   if (!this.Primaries.buildTypes.includes(db.Primaries[item].dmg))\n        //     this.Primaries.buildTypes.push(db.Primaries[item].dmg);\n        //\n        //   if (!this.Primaries.triggerTypes.includes(db.Primaries[item].type) && !db.Primaries[item].type.includes('/')) {\n        //     this.Primaries.triggerTypes.push(db.Primaries[item].type);\n        //   }\n        //\n        //   if (!this.Primaries.munitionTypes.includes(db.Primaries[item].munitions) && !db.Primaries[item].munitions.includes('/'))\n        //     this.Primaries.munitionTypes.push(db.Primaries[item].munitions);\n        // }\n        // console.log(this.Primaries);\n\n        // for (let item in db.Secondaries) {\n        //   if (!this.Secondaries.categoryTypes.includes(db.Secondaries[item].category))\n        //     this.Secondaries.categoryTypes.push(db.Secondaries[item].category);\n        //\n        //   if (!this.Secondaries.buildTypes.includes(db.Secondaries[item].dmg)) {\n        //     this.Secondaries.buildTypes.push(db.Secondaries[item].dmg);\n        //   }\n        //\n        //   if (!this.Secondaries.triggerTypes.includes(db.Secondaries[item].type) && !db.Secondaries[item].type.includes('/')) {\n        //     this.Secondaries.triggerTypes.push(db.Secondaries[item].type);\n        //   }\n        //\n        //   if (!this.Secondaries.munitionTypes.includes(db.Secondaries[item].munitions) && !db.Secondaries[item].munitions.includes('/')) {\n        //     this.Secondaries.munitionTypes.push(db.Secondaries[item].munitions);\n        //   }\n        // }\n        // console.log(this.Secondaries);\n\n        // for (let item in db.Melees) {\n        //   if (!this.Melees.buildTypes.includes(db.Melees[item].dmg))\n        //     this.Melees.buildTypes.push(db.Melees[item].dmg);\n        //\n        //   if (!this.Melees.categoryTypes.includes(db.Melees[item].category))\n        //     this.Melees.categoryTypes.push(db.Melees[item].category);\n        // }\n      // console.log(this.Melees);\n\n        return this.database;\n      }\n    ));\n  }\n\n  getTabData(tab: string): Observable<(Item | Tier)[]> {\n    this.currentTab = tab;\n    this.notifyTabListener.next(tab);\n    return this.getDb().pipe<(Item | Tier)[]>(map(db => {\n        return this.applyFilter(db[tab]);\n      })\n    );\n  }\n\n  static sort(values: any): (Item | Tier)[] {\n    let itemArray: Item[] = Object.values(values);\n    let items: (Item | Tier)[];\n    items = itemArray.sort((a, b) => {\n      return a.rank - b.rank;\n    });\n\n    return items;\n  }\n\n  static injectTiers(values: any): (Item | Tier)[] {\n    let items = DataService.sort(values);\n    //Inject the tier lines\n    let topAdded = false;\n    let contAdded = false;\n    let viaAdded = false;\n    let nbAdded = false;\n    let utAdded = false;\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].tier === firstTier.name && !topAdded) {\n        items.splice(i, 0, firstTier);\n        topAdded = true;\n      } else if (items[i].tier === secondTier.name && !contAdded) {\n        items.splice(i, 0, secondTier);\n        contAdded = true;\n      } else if (items[i].tier === thirdTier.name && !viaAdded) {\n        items.splice(i, 0, thirdTier);\n        viaAdded = true;\n      } else if (items[i].tier === fourthTier.name && !nbAdded) {\n        items.splice(i, 0, fourthTier);\n        nbAdded = true;\n      } else if (items[i].tier === untestedTier.name && !utAdded) {\n        items.splice(i, 0, untestedTier);\n        utAdded = true;\n      }\n    }\n\n    return items;\n  }\n\n  //TODO subscribe to this and add a loading screen\n  public setFilterParams(input: FilterParams) {\n    // console.log(JSON.stringify(input));\n    this.filterParams = input;\n    // this.getTabData(this.currentTab);\n    let promise = this.getDb().pipe<(Item | Tier)[]>(map(db => {\n        return this.applyFilter(db[this.currentTab]);\n      })\n    );\n\n    promise.subscribe(() => {\n      this.dataChange.next();\n    });\n    return promise;\n  }\n\n  public getCurFilterParams() {\n    return this.filterParams;\n  }\n\n  clearFilters() {\n    this.setFilterParams(new FilterParams());\n  }\n\n  private applyFilter(items: any[]): (Item | Tier)[] {\n    return DataService.injectTiers(items.filter((item) => {\n      let show = true;\n      if (item.name && this.filterParams.name) {\n        show = show && item.name.toLowerCase().includes(this.filterParams.name.toLowerCase());\n      }\n      if (item.base && this.filterParams.base) {\n        show = show && item.base.toLowerCase().includes(this.filterParams.base.toLowerCase());\n      }\n      if (item.mr && this.filterParams.mr)\n        show = show && this.filterParams.mr >= item.mr;\n      if (item.rivenDisp && this.filterParams.rivenDisp)\n        show = show && this.filterParams.rivenDisp <= item.rivenDisp;\n\n      if (item.tier && this.filterParams.tier) {\n        let match = false;\n        this.filterParams.tier.forEach((tier) => {\n          if (item.tier === tier)\n            match = true;\n        });\n\n        show = show && match;\n      }\n      if (item.category && this.filterParams.category && this.filterParams.category.length > 0) {\n        let match = false;\n        this.filterParams.category.forEach((category) => {\n          if (item.category.includes(category))\n            match = true;\n        });\n        show = show && match;\n      }\n      if (item.munitions && this.filterParams.munitions && this.filterParams.munitions.length > 0) {\n        let match = false;\n        this.filterParams.munitions.forEach((munition) => {\n          if (item.munitions.includes(munition))\n            match = true;\n        });\n        show = show && match;\n      }\n      if (item.triggerType && this.filterParams.triggerType && this.filterParams.triggerType.length > 0) {\n        let match = false;\n        this.filterParams.triggerType.forEach((triggerType) => {\n          if (item.triggerType.includes(triggerType))\n            match = true;\n        });\n        show = show && match;\n      }\n      if (item.dmg && this.filterParams.buildType && this.filterParams.buildType.length > 0) {\n        let match = false;\n        this.filterParams.buildType.forEach((buildType) => {\n          if (item.dmg.includes(buildType))\n            match = true;\n        });\n        show = show && match;\n      }\n\n      return show;\n    }));\n  }\n}\n\nexport const firstTier: Tier = {name: 'Exceptional', rank: 0, tier: null, isTier: true};\nexport const secondTier: Tier = {name: 'Satisfactory', rank: 1, tier: null, isTier: true};\nexport const thirdTier: Tier = {name: 'Mediocre', rank: 2, tier: null, isTier: true};\nexport const fourthTier: Tier = {name: 'Insufficient', rank: 3, tier: null, isTier: true};\nexport const untestedTier: Tier = {name: 'Untested', rank: 4, tier: null, isTier: true};\n\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from \"@angular/router\";\nimport {DataService} from \"./data.service\";\nimport {Observable} from \"rxjs\";\nimport {Database} from \"../models/Database\";\n\n@Injectable({\n  providedIn: 'root'\n})\n@Injectable()\nexport class DbResolverService implements Resolve<Database> {\n  constructor(private dataService: DataService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Database> {\n    return this.dataService.getDb();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from \"rxjs/internal/Subject\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterDialogService {\n  showSidebarChange: Subject<boolean>;\n\n  constructor() {\n    this.showSidebarChange = new Subject<boolean>();\n  }\n\n  toggle() {\n    this.showSidebarChange.next();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {primBuildTypes, primCategories, primMunitionTypes, primTriggerTypes} from \"../models/Primary\";\nimport {tierTypes} from \"../models/Database\";\nimport {Subscription} from \"rxjs\";\nimport {DataService} from \"./data.service\";\nimport {FilterParams} from \"../models/FilterParams\";\nimport {secBuildTypes, secCategories, secMunitionTypes, secTriggerTypes} from \"../models/Secondary\";\nimport {meleeBuildTypes, meleeCategories} from \"../models/Melee\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n\n  private _tabSub: Subscription;\n\n  filterCategory: string;\n\n  //Strings\n  name: string;\n  base: string;\n\n  //Numbers\n  mr: number;\n  rivenDisp: number;\n\n  munitionChoices: string[];\n  buildChoices: string[];\n  triggerChoices: string[];\n  tierChoices: string[];\n  categoryChoices: string[];\n\n  //Arrays\n  munitionTypes: string[];\n  buildTypes: string[];\n  triggerTypes: string[];\n  tierTypes: string[];\n  categoryTypes: string[];\n\n  constructor(\n    private data: DataService\n  ) {\n    this.tierTypes = tierTypes;\n\n    this._tabSub = data.notifyTabListener.subscribe((tab) => {\n      this.changeTab(tab);\n    });\n  }\n\n  changeTab(tab) {\n    console.log('filter service: getting values for ' + tab);\n    switch (tab) {\n      case \"primaries\":\n        this.filterCategory = \"Primary\";\n        this.categoryTypes = Object.values(primCategories);\n        this.munitionTypes = Object.values(primMunitionTypes);\n        this.buildTypes = Object.values(primBuildTypes);\n        this.triggerTypes = Object.values(primTriggerTypes);\n        break;\n      case \"secondaries\":\n        this.filterCategory = \"Secondary\";\n        this.categoryTypes = Object.values(secCategories);\n        this.munitionTypes = Object.values(secMunitionTypes);\n        this.buildTypes = Object.values(secBuildTypes);\n        this.triggerTypes = Object.values(secTriggerTypes);\n        break;\n      case \"melees\":\n        this.filterCategory = \"Melee\";\n        this.categoryTypes = meleeCategories;\n        this.munitionTypes = [];\n        this.buildTypes = meleeBuildTypes;\n        this.triggerTypes = [];\n        break;\n      default:\n        this.filterCategory = \"Item\";\n    }\n  }\n\n  clear() {\n    this.base = '';\n    this.name = '';\n\n    this.mr = null;\n    this.rivenDisp = null;\n\n    this.munitionChoices = [];\n    this.categoryChoices = [];\n    this.triggerChoices = [];\n    this.buildChoices = [];\n    this.tierChoices = [];\n\n    this.data.clearFilters();\n  }\n\n  apply(params: FilterParams) {\n    if (Object.keys(params).length !== 0)\n      this.data.setFilterParams(params);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"]}